package com.mudxx.common.utils.id;

//九种分布式ID解决方案
//UUID
//    优点：代码实现简单、没有网络开销，性能好
//    缺点：占用空间大、无序
//
//数据库自增ID
//    优点：利用数据库系统的功能实现，成本小、ID自增有序
//    缺点：并发性能受Mysql限制、强依赖DB，当DB异常时整个系统不可用，致命
//
//Redis INCR
//    优点：性能优于数据库、ID有序
//    缺点：解决单点问题带来的数据一致性等问题使得复杂度提高
//
//雪花算法
//    优点：不依赖数据库等第三方系统，性能也是非高、可以根据自身业务特性分配bit位，非常灵活
//    缺点：强依赖机器时钟，如果机器上时钟回拨，会导致发号重复或者业务特性分配bit位，非常灵活
//
//号段模式
//    优点：数据库的压力小
//    缺点：单点故障ID不连续
//
//Leaf、Uidgenerator、TinyID
//    优点：高性能、高可用、接入简单
//    缺点：依赖第三方组件如Zookeeper、Mysql
